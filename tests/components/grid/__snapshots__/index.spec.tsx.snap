// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`components/grid When loading should render and match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="grid"
      >
        <div
          class="grid__header"
        >
          <div
            class="grid__header__left"
          >
            <div
              class="grid__header__left__title"
            >
              sample grid
            </div>
            <div
              class="grid__header__left__data-count"
            >
              (
              0
              /
              0
              )
            </div>
          </div>
          <div
            class="grid__header__right"
          >
            <div>
              <label
                class="select"
              >
                <span
                  class="select__label"
                >
                  Sort by:
                </span>
                <select
                  class="select__element"
                  data-testid="select"
                />
              </label>
              <button
                class="button button--tertiary"
                data-testid="sort-order-button"
              >
                <i
                  class="fas fa-arrow-up"
                />
              </button>
            </div>
          </div>
        </div>
        <div
          class="grid__loading"
        >
          <div>
            loading
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="grid"
    >
      <div
        class="grid__header"
      >
        <div
          class="grid__header__left"
        >
          <div
            class="grid__header__left__title"
          >
            sample grid
          </div>
          <div
            class="grid__header__left__data-count"
          >
            (
            0
            /
            0
            )
          </div>
        </div>
        <div
          class="grid__header__right"
        >
          <div>
            <label
              class="select"
            >
              <span
                class="select__label"
              >
                Sort by:
              </span>
              <select
                class="select__element"
                data-testid="select"
              />
            </label>
            <button
              class="button button--tertiary"
              data-testid="sort-order-button"
            >
              <i
                class="fas fa-arrow-up"
              />
            </button>
          </div>
        </div>
      </div>
      <div
        class="grid__loading"
      >
        <div>
          loading
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`components/grid When not loading should render and match snapshot 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="grid"
      >
        <div
          class="grid__header"
        >
          <div
            class="grid__header__left"
          >
            <div
              class="grid__header__left__title"
            >
              sample grid
            </div>
            <div
              class="grid__header__left__data-count"
            >
              (
              3
              /
              3
              )
            </div>
          </div>
          <div
            class="grid__header__right"
          >
            <div>
              <label
                class="select"
              >
                <span
                  class="select__label"
                >
                  Sort by:
                </span>
                <select
                  class="select__element"
                  data-testid="select"
                />
              </label>
              <button
                class="button button--tertiary"
                data-testid="sort-order-button"
              >
                <i
                  class="fas fa-arrow-up"
                />
              </button>
            </div>
          </div>
        </div>
        <div
          class="grid__table grid__table--grid-1"
        >
          <div
            class="grid__table__cell grid__table__cell--header"
          >
            Name
          </div>
          <div
            class="grid__table__cell"
          >
            Jane
          </div>
          <div
            class="grid__table__cell"
          >
            John
          </div>
          <div
            class="grid__table__cell"
          >
            Ray
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="grid"
    >
      <div
        class="grid__header"
      >
        <div
          class="grid__header__left"
        >
          <div
            class="grid__header__left__title"
          >
            sample grid
          </div>
          <div
            class="grid__header__left__data-count"
          >
            (
            3
            /
            3
            )
          </div>
        </div>
        <div
          class="grid__header__right"
        >
          <div>
            <label
              class="select"
            >
              <span
                class="select__label"
              >
                Sort by:
              </span>
              <select
                class="select__element"
                data-testid="select"
              />
            </label>
            <button
              class="button button--tertiary"
              data-testid="sort-order-button"
            >
              <i
                class="fas fa-arrow-up"
              />
            </button>
          </div>
        </div>
      </div>
      <div
        class="grid__table grid__table--grid-1"
      >
        <div
          class="grid__table__cell grid__table__cell--header"
        >
          Name
        </div>
        <div
          class="grid__table__cell"
        >
          Jane
        </div>
        <div
          class="grid__table__cell"
        >
          John
        </div>
        <div
          class="grid__table__cell"
        >
          Ray
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
